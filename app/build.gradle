plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 30
    buildToolsVersion "30.0.3"

    if (System.getenv("CI") == "true") {
        signingConfigs {
            release {
                storeFile file("$rootDir/keystore.jks")
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    } else {
        file("$rootDir/keystore.properties").with { propFile ->
            if (propFile.canRead()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(propFile))

                signingConfigs {
                    release {
                        storeFile file(keystoreProperties['storeFile'])
                        storePassword keystoreProperties['storePassword']
                        keyAlias keystoreProperties['keyAlias']
                        keyPassword keystoreProperties['keyPassword']
                    }
                }
            }
        }
    }

    defaultConfig {
        applicationId "com.example.cartonbrowser"
        minSdk 29
        targetSdk 30
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        ndk {
//            abiFilters "armeabi-v7a", "x86"
//        }
    }

    splits {
        abi {
            enable true
            reset()
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.compiler:compiler:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"

    // Overriding the older version used by compose runtime,
    // which is not present in repos other than to-be-deprecated jcenter
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm:0.3.4"

    // Consult https://github.com/mozilla-mobile/android-components/blob/master/buildSrc/src/main/java/Gecko.kt
    // for the latest release version number
    implementation "org.mozilla.geckoview:geckoview:88.0.20210504152106"

    implementation 'org.greenrobot:eventbus:3.2.0'

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.0-alpha06'

//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}